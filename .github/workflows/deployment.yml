name: 🚀 Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 📚 Checkout
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci --only=dev
        continue-on-error: true

      - name: 🧹 Lint code
        run: |
          npx eslint . --ext .js --fix || true
        continue-on-error: true

      - name: ✅ Validate HTML
        run: |
          npx html-validate index.html || true
        continue-on-error: true

      - name: 🔍 Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.12.x
          lhci autorun || true
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        continue-on-error: true

      - name: 📄 Setup Pages
        uses: actions/configure-pages@v4

      - name: 🏗️ Build site
        run: |
          echo "Building static site..."
          # Herhangi bir build işlemi yoksa sadece dosyaları kopyala
          mkdir -p _site
          cp -r * _site/ 2>/dev/null || :
          # Hidden files
          cp -r .github _site/ 2>/dev/null || :
          ls -la _site/

      - name: 📤 Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Test job
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    steps:
      - name: 📚 Checkout
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 📦 Install Playwright
        run: |
          npm install -D @playwright/test
          npx playwright install ${{ matrix.browser }}

      - name: 🧪 Run tests
        run: |
          # Basit test script'i
          cat > test-basic.js << 'EOF'
          const { test, expect } = require('@playwright/test');
          
          test('Ana sayfa yükleniyor', async ({ page }) => {
            await page.goto('file://' + process.cwd() + '/index.html');
            await expect(page).toHaveTitle(/İmar Hesaplayıcısı/);
          });
          
          test('Hesaplama formu çalışıyor', async ({ page }) => {
            await page.goto('file://' + process.cwd() + '/index.html');
            await page.fill('#plotArea', '1000');
            await page.fill('#taks', '0.4');
            await page.fill('#kaks', '1.2');
            await page.click('button:has-text("Hesapla")');
            // Sonuç alanının görünür olmasını bekle
            await page.waitForSelector('#resultsContainer', { timeout: 5000 });
          });
          EOF
          
          npx playwright test test-basic.js --project=${{ matrix.browser }}
        continue-on-error: true

  # Performance audit
  performance:
    runs-on: ubuntu-latest
    steps:
      - name: 📚 Checkout
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: 📦 Install dependencies
        run: |
          npm install -g lighthouse
          npm install -g http-server

      - name: 🌐 Start server
        run: |
          http-server . -p 3000 &
          sleep 5

      - name: 🔍 Run Lighthouse
        run: |
          lighthouse http://localhost:3000 --output=html --output-path=./lighthouse-report.html --chrome-flags="--headless --no-sandbox" || true

      - name: 📤 Upload Lighthouse report
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report-${{ matrix.browser }}
          path: lighthouse-report.html
        continue-on-error: true

  # Security scan
  security:
    runs-on: ubuntu-latest
    steps:
      - name: 📚 Checkout
        uses: actions/checkout@v4

      - name: 🔒 Run security scan
        run: |
          # Basit güvenlik kontrolleri
          echo "=== Güvenlik Taraması ==="
          
          # Hassas dosya kontrolü
          if find . -name "*.env*" -o -name "*.key" -o -name "*secret*" | grep -q .; then
            echo "⚠️  Hassas dosyalar bulundu"
            find . -name "*.env*" -o -name "*.key" -o -name "*secret*"
          else
            echo "✅ Hassas dosya bulunamadı"
          fi
          
          # JavaScript güvenlik kontrolleri
          if grep -r "eval\|innerHTML\|document.write" *.js *.html 2>/dev/null; then
            echo "⚠️  Potansiyel güvenlik riski"
          else
            echo "✅ Temel güvenlik kontrolleri geçti"
          fi

  # Notify on success
  notify:
    runs-on: ubuntu-latest
    needs: [build, deploy, test, performance, security]
    if: always() && github.ref == 'refs/heads/main'
    steps:
      - name: 📢 Success notification
        if: needs.deploy.result == 'success'
        run: |
          echo "🎉 Deployment başarılı!"
          echo "🌐 Site URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
          
      - name: 📢 Failure notification  
        if: failure()
        run: |
          echo "❌ Deployment başarısız!"
          echo "🔍 Logları kontrol edin"
